/**
 */
package textualmcrl2.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import textualmcrl2.util.Textualmcrl2AdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class Textualmcrl2ItemProviderAdapterFactory extends Textualmcrl2AdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Textualmcrl2ItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Specification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecificationItemProvider specificationItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Specification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecificationAdapter() {
		if (specificationItemProvider == null) {
			specificationItemProvider = new SpecificationItemProvider(this);
		}

		return specificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Sort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SortItemProvider sortItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Sort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSortAdapter() {
		if (sortItemProvider == null) {
			sortItemProvider = new SortItemProvider(this);
		}

		return sortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.ExpressionSort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpressionSortItemProvider expressionSortItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.ExpressionSort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpressionSortAdapter() {
		if (expressionSortItemProvider == null) {
			expressionSortItemProvider = new ExpressionSortItemProvider(this);
		}

		return expressionSortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.StructureSort} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructureSortItemProvider structureSortItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.StructureSort}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructureSortAdapter() {
		if (structureSortItemProvider == null) {
			structureSortItemProvider = new StructureSortItemProvider(this);
		}

		return structureSortItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Bool} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoolItemProvider boolItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Bool}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoolAdapter() {
		if (boolItemProvider == null) {
			boolItemProvider = new BoolItemProvider(this);
		}

		return boolItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Pos} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PosItemProvider posItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Pos}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPosAdapter() {
		if (posItemProvider == null) {
			posItemProvider = new PosItemProvider(this);
		}

		return posItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Nat} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NatItemProvider natItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Nat}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNatAdapter() {
		if (natItemProvider == null) {
			natItemProvider = new NatItemProvider(this);
		}

		return natItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Int} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntItemProvider intItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Int}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntAdapter() {
		if (intItemProvider == null) {
			intItemProvider = new IntItemProvider(this);
		}

		return intItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Real} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RealItemProvider realItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Real}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRealAdapter() {
		if (realItemProvider == null) {
			realItemProvider = new RealItemProvider(this);
		}

		return realItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.List} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ListItemProvider listItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.List}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createListAdapter() {
		if (listItemProvider == null) {
			listItemProvider = new ListItemProvider(this);
		}

		return listItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Set} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetItemProvider setItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Set}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetAdapter() {
		if (setItemProvider == null) {
			setItemProvider = new SetItemProvider(this);
		}

		return setItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Bag} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BagItemProvider bagItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Bag}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBagAdapter() {
		if (bagItemProvider == null) {
			bagItemProvider = new BagItemProvider(this);
		}

		return bagItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.SortRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SortRefItemProvider sortRefItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.SortRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSortRefAdapter() {
		if (sortRefItemProvider == null) {
			sortRefItemProvider = new SortRefItemProvider(this);
		}

		return sortRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.HigherOrder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HigherOrderItemProvider higherOrderItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.HigherOrder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHigherOrderAdapter() {
		if (higherOrderItemProvider == null) {
			higherOrderItemProvider = new HigherOrderItemProvider(this);
		}

		return higherOrderItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Constructor} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstructorItemProvider constructorItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Constructor}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstructorAdapter() {
		if (constructorItemProvider == null) {
			constructorItemProvider = new ConstructorItemProvider(this);
		}

		return constructorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Projection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProjectionItemProvider projectionItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Projection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProjectionAdapter() {
		if (projectionItemProvider == null) {
			projectionItemProvider = new ProjectionItemProvider(this);
		}

		return projectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Op} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OpItemProvider opItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Op}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOpAdapter() {
		if (opItemProvider == null) {
			opItemProvider = new OpItemProvider(this);
		}

		return opItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Eqn} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EqnItemProvider eqnItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Eqn}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEqnAdapter() {
		if (eqnItemProvider == null) {
			eqnItemProvider = new EqnItemProvider(this);
		}

		return eqnItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Equation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EquationItemProvider equationItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Equation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEquationAdapter() {
		if (equationItemProvider == null) {
			equationItemProvider = new EquationItemProvider(this);
		}

		return equationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Atom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AtomItemProvider atomItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Atom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAtomAdapter() {
		if (atomItemProvider == null) {
			atomItemProvider = new AtomItemProvider(this);
		}

		return atomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.AtomicAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AtomicActionItemProvider atomicActionItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.AtomicAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAtomicActionAdapter() {
		if (atomicActionItemProvider == null) {
			atomicActionItemProvider = new AtomicActionItemProvider(this);
		}

		return atomicActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Deadlock} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeadlockItemProvider deadlockItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Deadlock}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeadlockAdapter() {
		if (deadlockItemProvider == null) {
			deadlockItemProvider = new DeadlockItemProvider(this);
		}

		return deadlockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Tau} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TauItemProvider tauItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Tau}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTauAdapter() {
		if (tauItemProvider == null) {
			tauItemProvider = new TauItemProvider(this);
		}

		return tauItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Summation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SummationItemProvider summationItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Summation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSummationAdapter() {
		if (summationItemProvider == null) {
			summationItemProvider = new SummationItemProvider(this);
		}

		return summationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Block} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BlockItemProvider blockItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Block}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBlockAdapter() {
		if (blockItemProvider == null) {
			blockItemProvider = new BlockItemProvider(this);
		}

		return blockItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Allow} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AllowItemProvider allowItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Allow}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAllowAdapter() {
		if (allowItemProvider == null) {
			allowItemProvider = new AllowItemProvider(this);
		}

		return allowItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Hide} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HideItemProvider hideItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Hide}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHideAdapter() {
		if (hideItemProvider == null) {
			hideItemProvider = new HideItemProvider(this);
		}

		return hideItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Rename} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RenameItemProvider renameItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Rename}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRenameAdapter() {
		if (renameItemProvider == null) {
			renameItemProvider = new RenameItemProvider(this);
		}

		return renameItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Renaming} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RenamingItemProvider renamingItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Renaming}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRenamingAdapter() {
		if (renamingItemProvider == null) {
			renamingItemProvider = new RenamingItemProvider(this);
		}

		return renamingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Communication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommunicationItemProvider communicationItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Communication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommunicationAdapter() {
		if (communicationItemProvider == null) {
			communicationItemProvider = new CommunicationItemProvider(this);
		}

		return communicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.MultiAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultiActionItemProvider multiActionItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.MultiAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultiActionAdapter() {
		if (multiActionItemProvider == null) {
			multiActionItemProvider = new MultiActionItemProvider(this);
		}

		return multiActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Synchronization} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SynchronizationItemProvider synchronizationItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Synchronization}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSynchronizationAdapter() {
		if (synchronizationItemProvider == null) {
			synchronizationItemProvider = new SynchronizationItemProvider(this);
		}

		return synchronizationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.TimedAction} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimedActionItemProvider timedActionItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.TimedAction}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimedActionAdapter() {
		if (timedActionItemProvider == null) {
			timedActionItemProvider = new TimedActionItemProvider(this);
		}

		return timedActionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Sequence} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SequenceItemProvider sequenceItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Sequence}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSequenceAdapter() {
		if (sequenceItemProvider == null) {
			sequenceItemProvider = new SequenceItemProvider(this);
		}

		return sequenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Implication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplicationItemProvider implicationItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Implication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplicationAdapter() {
		if (implicationItemProvider == null) {
			implicationItemProvider = new ImplicationItemProvider(this);
		}

		return implicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.BoundedInitialisation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundedInitialisationItemProvider boundedInitialisationItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.BoundedInitialisation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundedInitialisationAdapter() {
		if (boundedInitialisationItemProvider == null) {
			boundedInitialisationItemProvider = new BoundedInitialisationItemProvider(this);
		}

		return boundedInitialisationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Parallelism} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParallelismItemProvider parallelismItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Parallelism}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParallelismAdapter() {
		if (parallelismItemProvider == null) {
			parallelismItemProvider = new ParallelismItemProvider(this);
		}

		return parallelismItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.LeftMerge} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeftMergeItemProvider leftMergeItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.LeftMerge}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLeftMergeAdapter() {
		if (leftMergeItemProvider == null) {
			leftMergeItemProvider = new LeftMergeItemProvider(this);
		}

		return leftMergeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Choice} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChoiceItemProvider choiceItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Choice}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChoiceAdapter() {
		if (choiceItemProvider == null) {
			choiceItemProvider = new ChoiceItemProvider(this);
		}

		return choiceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Identifier} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IdentifierItemProvider identifierItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Identifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIdentifierAdapter() {
		if (identifierItemProvider == null) {
			identifierItemProvider = new IdentifierItemProvider(this);
		}

		return identifierItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Number} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumberItemProvider numberItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Number}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumberAdapter() {
		if (numberItemProvider == null) {
			numberItemProvider = new NumberItemProvider(this);
		}

		return numberItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.BooleanLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanLiteralItemProvider booleanLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.BooleanLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanLiteralAdapter() {
		if (booleanLiteralItemProvider == null) {
			booleanLiteralItemProvider = new BooleanLiteralItemProvider(this);
		}

		return booleanLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.SetEnumeration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetEnumerationItemProvider setEnumerationItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.SetEnumeration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetEnumerationAdapter() {
		if (setEnumerationItemProvider == null) {
			setEnumerationItemProvider = new SetEnumerationItemProvider(this);
		}

		return setEnumerationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.ListEnumeration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ListEnumerationItemProvider listEnumerationItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.ListEnumeration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createListEnumerationAdapter() {
		if (listEnumerationItemProvider == null) {
			listEnumerationItemProvider = new ListEnumerationItemProvider(this);
		}

		return listEnumerationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.BagEnumeration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BagEnumerationItemProvider bagEnumerationItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.BagEnumeration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBagEnumerationAdapter() {
		if (bagEnumerationItemProvider == null) {
			bagEnumerationItemProvider = new BagEnumerationItemProvider(this);
		}

		return bagEnumerationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.BagEnumElement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BagEnumElementItemProvider bagEnumElementItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.BagEnumElement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBagEnumElementAdapter() {
		if (bagEnumElementItemProvider == null) {
			bagEnumElementItemProvider = new BagEnumElementItemProvider(this);
		}

		return bagEnumElementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.FunctionApplication} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionApplicationItemProvider functionApplicationItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.FunctionApplication}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionApplicationAdapter() {
		if (functionApplicationItemProvider == null) {
			functionApplicationItemProvider = new FunctionApplicationItemProvider(this);
		}

		return functionApplicationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.MapAccess} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MapAccessItemProvider mapAccessItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.MapAccess}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMapAccessAdapter() {
		if (mapAccessItemProvider == null) {
			mapAccessItemProvider = new MapAccessItemProvider(this);
		}

		return mapAccessItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.UnaryExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryExpressionItemProvider unaryExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.UnaryExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryExpressionAdapter() {
		if (unaryExpressionItemProvider == null) {
			unaryExpressionItemProvider = new UnaryExpressionItemProvider(this);
		}

		return unaryExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Quantification} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QuantificationItemProvider quantificationItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Quantification}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQuantificationAdapter() {
		if (quantificationItemProvider == null) {
			quantificationItemProvider = new QuantificationItemProvider(this);
		}

		return quantificationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.IdDecl} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IdDeclItemProvider idDeclItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.IdDecl}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIdDeclAdapter() {
		if (idDeclItemProvider == null) {
			idDeclItemProvider = new IdDeclItemProvider(this);
		}

		return idDeclItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.BinaryExpression} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryExpressionItemProvider binaryExpressionItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.BinaryExpression}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryExpressionAdapter() {
		if (binaryExpressionItemProvider == null) {
			binaryExpressionItemProvider = new BinaryExpressionItemProvider(this);
		}

		return binaryExpressionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Lambda} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LambdaItemProvider lambdaItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Lambda}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLambdaAdapter() {
		if (lambdaItemProvider == null) {
			lambdaItemProvider = new LambdaItemProvider(this);
		}

		return lambdaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.WhereClause} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected WhereClauseItemProvider whereClauseItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.WhereClause}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createWhereClauseAdapter() {
		if (whereClauseItemProvider == null) {
			whereClauseItemProvider = new WhereClauseItemProvider(this);
		}

		return whereClauseItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.Process} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessItemProvider processItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.Process}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessAdapter() {
		if (processItemProvider == null) {
			processItemProvider = new ProcessItemProvider(this);
		}

		return processItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.ProcessDecl} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProcessDeclItemProvider processDeclItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.ProcessDecl}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProcessDeclAdapter() {
		if (processDeclItemProvider == null) {
			processDeclItemProvider = new ProcessDeclItemProvider(this);
		}

		return processDeclItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link textualmcrl2.ConstraintVar} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintVarItemProvider constraintVarItemProvider;

	/**
	 * This creates an adapter for a {@link textualmcrl2.ConstraintVar}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintVarAdapter() {
		if (constraintVarItemProvider == null) {
			constraintVarItemProvider = new ConstraintVarItemProvider(this);
		}

		return constraintVarItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (specificationItemProvider != null) specificationItemProvider.dispose();
		if (sortItemProvider != null) sortItemProvider.dispose();
		if (expressionSortItemProvider != null) expressionSortItemProvider.dispose();
		if (structureSortItemProvider != null) structureSortItemProvider.dispose();
		if (boolItemProvider != null) boolItemProvider.dispose();
		if (posItemProvider != null) posItemProvider.dispose();
		if (natItemProvider != null) natItemProvider.dispose();
		if (intItemProvider != null) intItemProvider.dispose();
		if (realItemProvider != null) realItemProvider.dispose();
		if (listItemProvider != null) listItemProvider.dispose();
		if (setItemProvider != null) setItemProvider.dispose();
		if (bagItemProvider != null) bagItemProvider.dispose();
		if (sortRefItemProvider != null) sortRefItemProvider.dispose();
		if (higherOrderItemProvider != null) higherOrderItemProvider.dispose();
		if (constructorItemProvider != null) constructorItemProvider.dispose();
		if (projectionItemProvider != null) projectionItemProvider.dispose();
		if (opItemProvider != null) opItemProvider.dispose();
		if (eqnItemProvider != null) eqnItemProvider.dispose();
		if (equationItemProvider != null) equationItemProvider.dispose();
		if (atomItemProvider != null) atomItemProvider.dispose();
		if (atomicActionItemProvider != null) atomicActionItemProvider.dispose();
		if (deadlockItemProvider != null) deadlockItemProvider.dispose();
		if (tauItemProvider != null) tauItemProvider.dispose();
		if (summationItemProvider != null) summationItemProvider.dispose();
		if (blockItemProvider != null) blockItemProvider.dispose();
		if (allowItemProvider != null) allowItemProvider.dispose();
		if (hideItemProvider != null) hideItemProvider.dispose();
		if (renameItemProvider != null) renameItemProvider.dispose();
		if (renamingItemProvider != null) renamingItemProvider.dispose();
		if (communicationItemProvider != null) communicationItemProvider.dispose();
		if (multiActionItemProvider != null) multiActionItemProvider.dispose();
		if (synchronizationItemProvider != null) synchronizationItemProvider.dispose();
		if (timedActionItemProvider != null) timedActionItemProvider.dispose();
		if (sequenceItemProvider != null) sequenceItemProvider.dispose();
		if (implicationItemProvider != null) implicationItemProvider.dispose();
		if (boundedInitialisationItemProvider != null) boundedInitialisationItemProvider.dispose();
		if (parallelismItemProvider != null) parallelismItemProvider.dispose();
		if (leftMergeItemProvider != null) leftMergeItemProvider.dispose();
		if (choiceItemProvider != null) choiceItemProvider.dispose();
		if (identifierItemProvider != null) identifierItemProvider.dispose();
		if (numberItemProvider != null) numberItemProvider.dispose();
		if (booleanLiteralItemProvider != null) booleanLiteralItemProvider.dispose();
		if (setEnumerationItemProvider != null) setEnumerationItemProvider.dispose();
		if (listEnumerationItemProvider != null) listEnumerationItemProvider.dispose();
		if (bagEnumerationItemProvider != null) bagEnumerationItemProvider.dispose();
		if (bagEnumElementItemProvider != null) bagEnumElementItemProvider.dispose();
		if (functionApplicationItemProvider != null) functionApplicationItemProvider.dispose();
		if (mapAccessItemProvider != null) mapAccessItemProvider.dispose();
		if (unaryExpressionItemProvider != null) unaryExpressionItemProvider.dispose();
		if (quantificationItemProvider != null) quantificationItemProvider.dispose();
		if (idDeclItemProvider != null) idDeclItemProvider.dispose();
		if (binaryExpressionItemProvider != null) binaryExpressionItemProvider.dispose();
		if (lambdaItemProvider != null) lambdaItemProvider.dispose();
		if (whereClauseItemProvider != null) whereClauseItemProvider.dispose();
		if (processItemProvider != null) processItemProvider.dispose();
		if (processDeclItemProvider != null) processDeclItemProvider.dispose();
		if (constraintVarItemProvider != null) constraintVarItemProvider.dispose();
	}

}
